// BUILDING HUD FUNCTIONALITY
// Some functions could be merged to save functions count, but its necessary to see how it works with zeta_cl_confonthud
function void CL_DisplayBuildingHud (void) {
	SetHUDFont ();
	
	// If we want no hud, clear it
	if (GetCVar ("zeta_cl_nohud")) {
		ClearHudMessage (8850);
		ClearHudMessage (8851);
		ClearHudMessage (8852);
		return;
	}
	
	int bluey = 0.44;
	// [Dusk] {9/23/12} In smaller resolutions, we need to shove the blue
	// team base HUD a bit up or it will overlap with the red one
	if (GetCVar ("vid_defheight") <= 400)
		bluey = 0.36;

	// Get batteries colors
	str bb = FractionColor (RepairCharges[0], BATTERY_MAX);
	str rb = FractionColor (RepairCharges[1], BATTERY_MAX);
	
	// [Xindage] Fetch on the global array.
	HudMessageBold (
		s:"Battery \cc[ ", s:bb, d:RepairCharges[0], s:" \cc]\n",
		s:getBuildingColor(0, 0), s:"Barracks\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][0])), d:GetActorSpeed(MainTIDs[0][0]), s:"\cc%\n",
		s:getBuildingColor(0, 1), s:"Refinery\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][1])), d:GetActorSpeed(MainTIDs[0][1]), s:"\cc%\n",
		s:getBuildingColor(0, 2), s:"Research Centre\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][2])), d:GetActorSpeed(MainTIDs[0][2]), s:"\cc%\n",
		s:getBuildingColor(0, 3), s:"War Factory\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][3])), d:GetActorSpeed(MainTIDs[0][3]), s:"\cc%\n",
		s:getBuildingColor(0, 5), s:"Obelisk of Light\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][5])), d:GetActorSpeed(MainTIDs[0][5]), s:"\cc%\n",
		s:getBuildingColorGreen(MainTIDs[0][4]), s:"++", s:getBuildingColor(0, 4), s:"Repair Facility\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][4])), d:GetActorSpeed(MainTIDs[0][4]), s:"\cc%\n",
		s:getBuildingColorGreen(MainTIDs[0][6]), s:"++", s:getBuildingColor(0, 6), s:"HP Regen\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][6])), d:GetActorSpeed(MainTIDs[0][6]), s:"\cc%\n",
		s:getBuildingColorGreen(MainTIDs[0][7]), s:"++", s:getBuildingColor(0, 7), s:"Ammo Regen\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][7])), d:GetActorSpeed(MainTIDs[0][7]), s:"\cc%\n",
		s:getBuildingColorGreen(MainTIDs[0][8]), s:"++", s:getBuildingColor(0, 8), s:"Mini Refinery\cc: ",
		s:ColorCodeHealth(GetActorSpeed(MainTIDs[0][8])), d:GetActorSpeed(MainTIDs[0][8]), s:"\cc%\n",
		s:PortalLinkColor (TEAM_BLUE, 0), s:"++", s:PortalLinkColor (TEAM_BLUE, 1), s:"Teleporter\cc: ",
		s:ColorCodeHealth(PortalHealth (MainTIDs[0][9])), d:PortalHealth (MainTIDs[0][9]), s:"\cc% / ",
		s:ColorCodeHealth(PortalHealth (MainTIDs[0][10])), d:PortalHealth (MainTIDs[0][10]), s:"\cc%";
		HUDMSG_PLAIN, 8850, CR_BLUE, 0.012, bluey, 0.0);
	// Red Team
	HudMessageBold (
		s:"\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
		s:"Battery \cc[ ", s:rb, d:RepairCharges[1], s:" \cc]\n",
		s:getBuildingColor (1, 0), s:"Barracks\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][0])), d:GetActorSpeed (MainTIDs[1][0]), s:"\cc%\n",
		s:getBuildingColor (1, 1), s:"Refinery\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][1])), d:GetActorSpeed (MainTIDs[1][1]), s:"\cc%\n",
		s:getBuildingColor (1, 2), s:"Research Centre\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][2])), d:GetActorSpeed (MainTIDs[1][2]), s:"\cc%\n",
		s:getBuildingColor (1, 3), s:"War Factory\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][3])), d:GetActorSpeed (MainTIDs[1][3]), s:"\cc%\n",
		s:getBuildingColor (1, 5), s:"Obelisk of Light\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][5])), d:GetActorSpeed (MainTIDs[1][5]), s:"\cc%\n",
		s:getBuildingColorGreen (MainTIDs[1][4]), s:"++", s:getBuildingColor (1, 4), s:"Repair Facility\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][4])), d:GetActorSpeed (MainTIDs[1][4]), s:"\cc%\n",
		s:getBuildingColorGreen (MainTIDs[1][6]), s:"++", s:getBuildingColor (1, 6), s:"HP Regen\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][6])), d:GetActorSpeed (MainTIDs[1][6]), s:"\cc%\n",
		s:getBuildingColorGreen (MainTIDs[1][7]), s:"++", s:getBuildingColor (1, 7), s:"Ammo Regen\cc: ",
		s:ColorCodeHealth (GetActorSpeed (MainTIDs[1][7])), d:GetActorSpeed (MainTIDs[1][7]), s:"\cc%\n",
		s:getBuildingColorGreen(MainTIDs[1][8]), s:"++", s:getBuildingColor (1, 8), s:"Mini Refinery\cc: ",
		s:ColorCodeHealth(GetActorSpeed (MainTIDs[1][8])), d:GetActorSpeed (MainTIDs[1][8]), s:"\cc%\n",
		s:PortalLinkColor (TEAM_RED, 0), s:"++", s:PortalLinkColor (TEAM_RED, 1), s:"Teleporter\cc: ",
		s:ColorCodeHealth(PortalHealth (MainTIDs[1][9])), d:PortalHealth (MainTIDs[1][9]), s:"\cc% / ",
		s:ColorCodeHealth(PortalHealth (MainTIDs[1][10])), d:PortalHealth (MainTIDs[1][10]), s:"\cc%";
		HUDMSG_PLAIN, 8851, CR_RED, 0.012, bluey, 0.0);
	
	/*int bluelives = GetActorSpeed (TID_TICKETCOUNTER_BLUE);
	int redlives = GetActorSpeed (TID_TICKETCOUNTER_RED);*/
	int bluelives = Tickets[TEAM_BLUE];
	int redlives = Tickets[TEAM_RED];
	if (GetCVar ("zeta_forcelivehud") || bluelives || redlives) {
		int startlives = Config[CONFIG_STARTTICKETS][PEER_CLIENT];
		//SetFont ("SMALLFONT");
		HudMessageBold (
			s:"\n \n \n \n \n \n \n \n \n \n \n \n \n\cd--------\n",
			s:"\cHLives\cC: ", s:FractionColor (bluelives, startlives), d:bluelives,
			s:"\n\cGLives\cC: ", s:FractionColor (redlives, startlives), d:redlives,
			s:"\n\cd--------";
			HUDMSG_PLAIN, 8852, CR_BLUE, 0.012, 0.44, 0.0);
	}
}

function int PortalHealth (int t) {
	if (!ThingCount (T_NONE, t)) return 0;
	int s = GetActorSpeed (t);
	if (s < 0) return 0;
	return s;
}

function str PortalLinkColor (int team, int teamcolor) {
	int t1 = TID_TELENODE_BLUE1 + 2*team;
	int t2 = TID_TELENODE_BLUE2 + 2*team;
	int exists = ThingCount (T_NONE, t1) && ThingCount (T_NONE, t2);
	if (exists) {
		if (!teamcolor)
			return "\cD";
		if (team == TEAM_BLUE)
			return "\cH";
		return "\cG";
	}
	
	if (!teamcolor)
		return "\cQ";
	if (GetCVar ("zeta_cl_confonthud"))
		return "\cU";
	return "\cM";
}

function str ColorCodeHealth(int Percentage)
{
	if (Percentage == 100) // 100%
		return "\cq";
	else if (Percentage > 75) // healthy
		return "\cd";
	else if (Percentage > 50) // moderate
		return "\cf";
	else if (Percentage > 25) // low
		return "\ci";
	else if (Percentage > 0) // critical
		return "\cr";
	
	if (GetCVar ("zeta_cl_confonthud"))
		return "\cU";
	return "\cM";
}

function str getBuildingColor (int team, int target) {
	if (GetActorSpeed (MainTIDs[team][target]) > 0) {
		if (!team)
			return "\cH";
		else
			return "\cG";
	}
	
	if (GetCVar ("zeta_cl_confonthud"))
		return "\cU";
	return "\cM";
}

function str getBuildingColorGreen (int tid) {
	if (GetActorSpeed (tid) > 0)
		return "\cD";
	
	return "\cQ";
}
