// =============================================================================
// MENU INIT
script 706 (void) CLIENTSIDE {

	if (!(MenuTables & MTABLE_MECHS))
		BuildMenuMechs ();
	
	MenuName = "WAR FACTORY";
	MenuCategories[0] = "LIGHT";
	MenuCategories[1] = "MEDIUM";
	MenuCategories[2] = "HEAVY";
	
	int i, j;
	for (i = 0; i < NUM_MECH_WEIGHTS; i++) {
		for (j = 0; j < MAX_MENU_ITEMS; j++) {
			int m = MenuMechs[i][j];
			
			if (m < 0 || m >= NUM_MECHS)
				continue;
			
			MenuItems[i][j] = Mechs_str[m][MK_NAME];
		}
	}
}

// =============================================================================
// MENU DRAW
script 707 (int m0, int m1, int y) CLIENTSIDE {
	int hid = MENU_HID + 21;
	
	// Health
	HudMessage (s:"Health: \cd", d:Mechs_int[MenuMechs[m0][m1]][MK_HEALTH], s:" \cqHP";
		HUDMSG_PLAIN, hid, CR_WHITE, UMENU_X4, y, 0.0);
	y -= MENU_SPACING; hid++;
	
	// Price - no mech is free so no need to check for that
	HudMessage (s:"Cost: \cq$\cd", d:Mechs_int[MenuMechs[m0][m1]][MK_COST];
		HUDMSG_PLAIN, hid, CR_WHITE, UMENU_X4, y, 0.0);
	y -= MENU_SPACING; hid++;
	
	// Description - shifted a bit to the left to compensate for tabs
	HudMessage (s:Mechs_str[MenuMechs[m0][m1]][MK_DESCRIPTION];
		HUDMSG_PLAIN, hid, CR_WHITE, UMENU_X4-0.025, y, 0.0);
	y -= 0.1; hid++;
	
	SetResultValue (y);
}

// =============================================================================
// MENU SELECT
script 711 (int m0, int m1) {
	str res = WF_PurchaseMech (MenuMechs[m0][m1]);
	if (res != 0) {
		MenuResponse (MSGTYPE_ERROR, res);
		SetResultValue (0);
		terminate;
	}
	
	SetResultValue (1);
}

// =============================================================================
// MENU LIMIT
script 715 (int m0, int m1) CLIENTSIDE {
	SetResultValue (WF_CheckAvailability (MenuMechs[m0][m1]));
}