/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * All Out War 2 sudden death script
 * Credit to VoltlocK for originally creating the engine
 * With modifications by the Omega Team
 *
 * You may use portions of this script in your project as long as you give
 * credit where credit is due. Please don't be lame and just copy-paste any
 * of this and call it your own. Thanks!
 */

script SC_SuddenDeathCounter OPEN
{
	int timeUntilSuddenDeath;
	delay (35); // second before start.
	while (Timer() < GetCVAR ("zeta_suddendeathtime") * MINUTETICS)
	{
		timeUntilSuddenDeath = GetCVAR ("zeta_suddendeathtime") * MINUTETICS - Timer();
		if (timeUntilSuddenDeath == 5 * MINUTETICS) {
			// Print message to all players at 5 minutes before sudden death
			IntelMessage ("Sudden death will begin in \cg5 \c-minutes!", true);
		}
		else if (timeUntilSuddenDeath == MINUTETICS) {
			// Print message to all players at 1 minute before sudden death
			IntelMessage ("Sudden death will begin in \cg1 \c-minutes!", true);
		}
		delay (35);
	}
	ACS_Execute (SC_SUDDENDEATH, 0);
}

script SC_SuddenDeath (void) {
	SetActivator (-1);
	intHolder[i_SuddenDeath] = true;
	str mus = random (0, 1) ? "razor-ub" : "razorub2";
	SetMusic (mus);
	Log (s:"=== Sudden Death begins ===");
	// Give Vulnerability to all main buildings and its BTOs.
	for (int x = 0; x < 20; x++) {GiveActorInventory(SDVulnerabilityArray[x], "SuddenDeathVulnerability", 1);}
	// [Dusk] Allow maps to take action on sudden death
	CallEvent (ACTION_SUDDENDEATH, 0);
	// If not in tournament mode, give everybody beacons
	if (!intHolder[i_TournamentMode]) GiveToAll ("BeaconItem", 1);
	
	// Big notice
	SetFont ("BIGFONT");
	str message = (GetCVar ("zeta_ticketmode")) ?
	"\cgSUDDEN DEATH!\n\nBatteries are rapidly losing charges!" :
	"\cgSUDDEN DEATH!\n\nBatteries are rapidly losing charges!\nEvery death counts!";

	HudMessageBold (s:message; HUDMSG_FADEOUT, 15001, CR_YELLOW, INTEL_XPOS, 0.25, 7.0, 1.0);
	
	// [Xindage] We really need it now?
	// Begin degeneration if its set.
	int degeneration = GetCVar ("zeta_degeneration");
	if (degeneration) {
		SetFont("BIGFONT");
		HudMessageBold (s:"WARNING: BUILDING DEGENERATION ACTIVE!";
			HUDMSG_FADEOUT, 15002, CR_RED,
			INTEL_XPOS, 0.45, 7.0, 1.0);
	}
	
	if (GetCVar ("zeta_ticketmode")) // Check if ticket mode is on.
	{
		// If ticket pool was not active in regular play, activate it now
		if (!intHolder[i_TicketPool]) {
			SetTickets (TEAM_BLUE, GetCVAR ("zeta_tickets"));
			SetTickets (TEAM_RED, GetCVAR ("zeta_tickets"));
		}

		// [Xindage] This should check for the zeta_tickets to know the actual ticket amount, why it's abitrary?
		// [JD] If Either team's tickets are above 75 when SD hits, set them to 75.
		else
		{
			if (Tickets[TEAM_BLUE] > 75)
				SetTickets(TEAM_BLUE, 75);

			if (Tickets[TEAM_RED] > 75)
				SetTickets(TEAM_RED, 75);
		}
	}
	
	int ticker = 0;
	int i;
	while (1) {
		if (!(ticker % 60)) {
			SetFont("SMALLFONT");
			IntelMessage ("Sudden Death!", false);
		}
		
		if (degeneration && !(ticker % GetCVar ("zeta_degenerationinterval"))) {
			// Crash all buildings by 1% every interval seconds
			for (i = 0; i <= 1; i++) {
				Thing_Damage (101+(i*100), HP_BARRACKS / 100);
				Thing_Damage (103+(i*100), HP_REFINERY / 100);
				Thing_Damage (105+(i*100), HP_PLANT / 100);
				Thing_Damage (107+(i*100), HP_FACTORY / 100);
				Thing_Damage (114+(i*100), HP_OBELISK / 100);
			}
		}
		
		delay (35);
		ticker++;
	}
}
